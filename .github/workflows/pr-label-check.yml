name: check label of PR to master

on:
  pull_request:
    branches:
      - master
    types:
      - synchronize
      - labeled
      - unlabeled
      - opened
      - reopened

jobs:
  check_label:
    if: github.base_ref == 'master'
    runs-on: [ self-hosted ]
    # secrets.GITHUB_TOKENの権限が大きいので、セキュリティリスク軽減のために制限。
    permissions:
      contents: write
      pull-requests: write
    # デフォルトでは最大6時間実行されるため制限。
    timeout-minutes: 10
    env:
      MASTER_BRANCH: master

    steps:
      - uses: actions/checkout@v3
      - name: gh auth login
        env:
          # secrets.GITHUB_TOKENはworkflowが実施されるたびに自動で生成される
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo ${GH_TOKEN} | gh auth login --hostname {ホスト名} --with-token

      - name: check label of PR to master
        # エラーの場合でも次のログアウトの処理を実行。結果ではエラーのマークは出ないので、PRが作成されなかった場合はActionsのページから詳細を確認。
        continue-on-error: false
        env:
          TZ: "Asia/Tokyo"
        run: |
          # forループを使用して配列内の各要素をチェック
          i=0
          items=$(gh pr view ${{ github.event.number }} --json labels -q '.labels[]')
          # 配列をループで処理
          IFS=$'\n' # 改行で区切る
          for item in $items; do
            name=`echo $item | jq -r '.name'`
            echo ${name}
            case "${name}" in
                  "major"|"minor"|"patch")
                          i=`expr $i + 1`
                      ;;
              esac
          done
          if [ ${i} -eq 0 ]; then
              echo "更新するリリースバージョンのlabelを付けてください( major or minor or patch )"
              exit 1;
          fi
          if [ ${i} -gt 1 ]; then
              echo "リリースバージョンのlabelを2つ以上つけないでください"
              exit 1;
          fi
          echo "finish"
      - name: gh auth logout
        # ランナーのインスタンスは他のプロダクトでも使用されているのでログアウトする。
        run: gh auth logout --hostname {ホスト名}
